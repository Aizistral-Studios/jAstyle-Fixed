import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "com.jfrog.bintray" version "1.8.4"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'signing'

group = 'com.github.abrarsyed.jastyle'
version = '1.5'
archivesBaseName = 'jAstyle-Fixed'

targetCompatibility = '1.6'
sourceCompatibility = '1.6'

repositories {
	 mavenCentral()
	 maven {
            name = "github"
            url = "https://github.com/juanmuscaria/maven/raw/master"
        }
}

dependencies {
	testCompile 'junit:junit:4.5'
	compile 'com.google.guava:guava:18.0'
}

processResources {
	expand(version: version)
}

jar {
	// MTEA inf stuff
	metaInf {
		from 'LICENSE'
		from 'README'
	}

	// manifest
	manifest { attributes 'Main-Class' : 'com.github.abrarsyed.jastyle.Main' }
	exclude 'com/integral/jastyle/**'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
	exclude 'com/integral/jastyle/**'
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
	exclude 'com/integral/jastyle/**'
}

artifacts {
	archives jar
	//archives javadocJar
	archives sourcesJar
}

publishing {
    publications {
        bintray(MavenPublication) {
            from components.java
            artifact sourcesJar
            //artifact javadocJar

            pom {
                name = project.archivesBaseName
                description = 'Code formatter for ForgeGradle'
                url = 'https://github.com/Aizistral-Studios/jAstyle-Fixed'

                issueManagement {
                    system = 'github'
                    url = 'https://github.com/Aizistral-Studios/jAstyle-Fixed/issues'
                }

                developers {
                    developer {
                        id = 'AbrarSyed'
                        name = 'Abrar Syed'
                        roles = ['developer']
                    }

                    developer {
                        id = 'Aizistral'
                        name = 'Aizistral'
                        roles = ['developer']
                    }
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

install {
    repositories.mavenInstaller {
        pom.groupId = project.group;
        pom.version = project.version
        pom.artifactId = project.name
    }
}